apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: postgres
  namespace: starter-pack-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-container
  template:
    metadata:
      labels:
        app: postgres-container
        tier: backend
    spec:
      containers:
        - name: postgres-container
          image: postgres:9.6.6
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: user

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password

            - name: POSTGRES_DB
              value: django_reference_app

          ports:
            - containerPort: 5432
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: starter-pack-apps
type: Opaque
data:
  user: ZGphbmdv
  password: MWEyNmQxZzI2ZDFnZXNiP2U3ZGVzYj9lN2Q=
---
kind: Service
apiVersion: v1
metadata:
  name: django-postgres
  namespace: starter-pack-apps
spec:
  selector:
    app: postgres-container
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: django
  namespace: starter-pack-apps
  labels:
    app: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-ref-app
  template:
    metadata:
      labels:
        app: django-ref-app
    spec:
      containers:
        - name: django
          image: 926803513772.dkr.ecr.eu-west-1.amazonaws.com/cloud-platform/cloud-platform-reference-app:latest
          ports:
            - containerPort: 8000
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: djangosecret
                  key: secretKey

            - name: SERVER_NAME
              value: demo.apps.cloud-platform-live-0.k8s.integration.dsd.io 

            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: user

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password

            - name: POSTGRES_HOST
              value: django-postgres
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: django-ingress
  namespace: starter-pack-apps
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: demo.apps.cloud-platform-live-0.k8s.integration.dsd.io
    http:
      paths:
      - path: /
        backend:
          serviceName: django-service
          servicePort: 8000
---
apiVersion: batch/v1
kind: Job
metadata:
  name: django-migrations
  namespace: starter-pack-apps
spec:
  template:
    spec:
      containers:
        - name: django
          image: 926803513772.dkr.ecr.eu-west-1.amazonaws.com/cloud-platform/cloud-platform-reference-app:latest
          command: ["/bin/bash","-c","python3 manage.py makemigrations guestbook && python3 manage.py makemigrations govuk_template_base && python3 manage.py migrate"]
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: user

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password

            - name: POSTGRES_HOST
              value: django-postgres
      restartPolicy: OnFailure
  backoffLimit: 5
---
apiVersion: v1
kind: Secret
metadata:
  name: djangosecret
  namespace: starter-pack-apps
type: Opaque
data:
  secretKey: dGhpc2lzVGhlU2VjcmV0S2V5Tm90aGluZ1RvU2VlSGVyZS4=
---
kind: Service
apiVersion: v1
metadata:
  name: django-service
  namespace: starter-pack-apps
spec:
  selector:
    app: django-ref-app
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: NodePort

